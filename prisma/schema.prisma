
datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                String @id @unique
  email             String
  firstName         String
  lastName          String
  imageUrl          String?
  userName          String    @unique
  createdCommunities Community[]

  requests         Request[]
  love Vote[]

  points                Float           @default(0)
  totalDonations        Int         @default(0)
  totalRequestsHelped   Int           @default(0)


  createdAt DateTime @default(now())
}

model Community {
  id          String @id @default(uuid())
  name        String @unique
  description String?

  creatorId String?

  User                User?     @relation(fields: [userId], references: [id])  
  userId              String?

  requests     Request[]


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model Request {
  id          String @id @default(uuid())
  title String
  textContent Json?
  imageString String?
  deadline DateTime @default(now()) 

  amount Int
  pointsUsed Float

  Community Community? @relation(fields: [communityName], references: [name])
  communityName String?

  User  User? @relation(fields: [userId], references: [id])
  userId String

  Vote Vote[]


createdAt DateTime @default(now())
updatedAt DateTime @updatedAt


}

enum TypeOfVote {
LOVE
SUSPISION
}

model Vote {
  id String @id @default(uuid())

  Request Request? @relation(fields: [requestId], references: [id])
  requestId String

  User User? @relation(fields: [userId], references: [id])
  userId String

  voteType TypeOfVote

}




